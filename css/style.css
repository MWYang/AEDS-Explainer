:root {
    --main-color: #0097a0;
    --secondary-color: #aaa;
    --main-font: 'Nunito', sans-serif;
}

/*
  Classes are identified with a .
  IDs are identified with a #
*/


html, body
{
    height: 100%;
}

body {
  font-family: var(--main-font);
  font-size: 110%;
}

.page {
  min-height: 100%;
}

h1 {
  text-align: center;
  color: var(--main-color);
  margin-top: 10%;
  margin-bottom: 5%;
}

h2 {
  text-align: center;
  color: var(--main-color);
  margin-top: 10%;
  margin-bottom: 5%;
  font-size: 25;
}

strong{
  color: var(--main-color);
}

#definitions_buttons{
  padding: 5%;
  font-size: 120%;
}

.problem_statement{
  border-style: solid;
 border-width: 5px;
 border-radius: 16px;
 padding: 5%;
}

.row{
  padding-top: 5%;
}

.slidecontainer {
  width: 100%; /* Width of the outside container */
}

.slider {
  -webkit-appearance: none;
  width: 60%;
  height: 15px;
  border-radius: 5px;
  background: #d3d3d3;
  outline: none;
  opacity: 0.7;
  -webkit-transition: .2s;
  transition: opacity .2s;
}

.slider:hover {
  opacity: 1; /* Fully shown on mouse-over */
}

.slider::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  width: 25px;
  height: 25px;
  border-radius: 50%;
  background:  var(--main-color);
  cursor: pointer;
}

.slider::-moz-range-thumb {
  width: 25px;
  height: 25px;
  border-radius: 50%;
  background:  var(--main-color);
  cursor: pointer;
}

.slider-row{
  padding: 1%;
}

.toy_buttons {
  margin-top: 3%;
  margin-left: 1%;
}



.splash_screen h1{
  color: black;
  font-size: 72px;

}

.splash_screen h2{
  color: black;
  margin-top: 3%;
  font-size: 58px;
}

.invisible {
  transition: opacity 3s ease;
  opacity: 0.0;
}

.visible {
  transition: opacity 3s ease;
  opacity: 1.0;
}

.fromTopIn
{
	transition: transform 3.0s ease, opacity 1.0s ease;

	transform: translate(0,0);
	opacity: 1.0;
}

.fromTopOut
{
	transition: transform 3.0s ease, opacity 1.0s ease;

	transform: translate(0,-10px);
	opacity: 0.0;
}

.fromBottomIn
{
	transition: transform 3.0s ease, opacity 1.0s ease;

	transform: translate(0,0);
	opacity: 1.0;
}

.fromBottomOut
{
	transition: transform 3.0s ease, opacity 1.0s ease;

	transform: translate(0,10px);
	opacity: 0.0;
}
